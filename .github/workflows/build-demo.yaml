# Copyright (c) 2021 by xfangfang. All Rights Reserved.


name: Build Macast

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/xfangfang/Macast
  REPO_BRANCH: main

jobs:
  build:
    runs-on: macos-10.15

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: 'xfangfang/Macast'

    - name: debug
      run: |
        ls -lah
        pwd

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Build
      id: compile
      run: |
        pip install -r requirements.txt
        pip install py2app


#     - name: Upload bin directory
#       uses: actions/upload-artifact@main
#       if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
#       with:
#         name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
#         path: openwrt/bin

#     - name: Organize files
#       id: organize
#       if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
#       run: |
#         cd openwrt/bin/targets/*/*
#         rm -rf packages
#         echo "FIRMWARE=$PWD" >> $GITHUB_ENV
#         echo "::set-output name=status::success"
#     - name: Upload firmware directory
#       uses: actions/upload-artifact@main
#       if: steps.organize.outputs.status == 'success' && !cancelled()
#       with:
#         name: Macast${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
#         path: ${{ env.FIRMWARE }}

#     - name: Generate release tag
#       id: tag
#       if: env.UPLOAD_RELEASE == 'true' && !cancelled()
#       run: |
#         echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
#         touch release.txt
#         [ $UPLOAD_COWTRANSFER = true ] && echo "ðŸ”— [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
#         [ $UPLOAD_WETRANSFER = true ] && echo "ðŸ”— [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
#         echo "::set-output name=status::success"
#     - name: Upload firmware to release
#       uses: softprops/action-gh-release@v1
#       if: steps.tag.outputs.status == 'success' && !cancelled()
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ steps.tag.outputs.release_tag }}
#         body_path: release.txt
#         files: ${{ env.FIRMWARE }}/*

#     - name: Delete workflow runs
#       uses: GitRML/delete-workflow-runs@main
#       with:
#         retain_days: 1
#         keep_minimum_runs: 3

#     - name: Remove old Releases
#       uses: dev-drprasad/delete-older-releases@v0.1.0
#       if: env.UPLOAD_RELEASE == 'true' && !cancelled()
#       with:
#         keep_latest: 3
#         delete_tags: true
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
