# Copyright (c) 2021 by xfangfang. All Rights Reserved.


name: Build Macast

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      release:
        description: 'Push a new release'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/xfangfang/Macast
  REPO_BRANCH: main

jobs:
  build:
    runs-on: macos-10.15

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: 'xfangfang/Macast'

    - name: install create-dmg
      run: |
        curl -o create-dmg https://raw.githubusercontent.com/create-dmg/create-dmg/master/create-dmg
        chmod u+x create-dmg

    - name: Build
      id: compile
      run: |
        pip3 install -r requirements/darwin.txt
        pip3 install py2app
        wget https://laboratory.stolendata.net/~djinn/mpv_osx/mpv-latest.tar.gz
        mkdir -p bin && tar --strip-components 2 -C bin -xzvf mpv-latest.tar.gz mpv.app/Contents/MacOS
        msgfmt -o i18n/zh_CN/LC_MESSAGES/macast.mo i18n/zh_CN/LC_MESSAGES/macast.po
        python3 setup.py py2app
        cp -R bin dist/Macast.app/Contents/Resources/
        export VERSION=`cat .version`
        echo "DIST_ZIP=Macast-v$VERSION.zip" >> $GITHUB_ENV
        echo "DIST_DMG=Macast-v${VERSION}-Installer.dmg" >> $GITHUB_ENV
        echo "VERSION=v$VERSION" >> $GITHUB_ENV
        ./create-dmg --window-pos 200 120 --window-size 800 400 --icon-size 100 --icon "Macast.app" 200 190  --hide-extension "Macast.app" --app-drop-link 600 185  --volname "Macast-v${VERSION} Installer" Macast-v${VERSION}-Installer.dmg "dist/"
        cd dist && zip -r Macast_v${VERSION}.zip Macast.app
        echo "::set-output name=status::success"

    - name: Upload dist
      uses: actions/upload-artifact@v2
      if: steps.compile.outputs.status == 'success'
      with:
        name: Macast Build
        path: |
          dist/${{ env.DIST_ZIP }}
          ${{ env.DIST_DMG }}
          
    - name: Generate release body
      id: tag
      run: |
        touch release.txt
        echo "This release is built by github-action." >> release.txt
        echo "::set-output name=status::success"

    - name: Upload Macast to release
      uses: softprops/action-gh-release@v1
      if: github.event.inputs.release == 'true' && github.event.inputs.release  != 'false' && steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        body_path: release.txt
        files: |
          dist/${{ env.DIST_ZIP }}
          ${{ env.DIST_DMG }}

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
